// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium -f -
// kopium version: 0.15.0

use kube::CustomResource;
use serde::{Serialize, Deserialize};
use std::collections::BTreeMap;
use k8s_openapi::apimachinery::pkg::util::intstr::IntOrString;

#[derive(CustomResource, Serialize, Deserialize, Clone, Debug)]
#[kube(group = "policy.kruise.io", version = "v1alpha1", kind = "PodUnavailableBudget", plural = "podunavailablebudgets")]
#[kube(namespaced)]
#[kube(status = "PodUnavailableBudgetStatus")]
#[kube(schema = "disabled")]
pub struct PodUnavailableBudgetSpec {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "maxUnavailable")]
    pub max_unavailable: Option<IntOrString>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "minAvailable")]
    pub min_available: Option<IntOrString>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub selector: Option<PodUnavailableBudgetSelector>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "targetRef")]
    pub target_ref: Option<PodUnavailableBudgetTargetRef>,
}

#[derive(Serialize, Deserialize, Clone, Debug)]
pub struct PodUnavailableBudgetSelector {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "matchExpressions")]
    pub match_expressions: Option<Vec<PodUnavailableBudgetSelectorMatchExpressions>>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "matchLabels")]
    pub match_labels: Option<BTreeMap<String, String>>,
}

#[derive(Serialize, Deserialize, Clone, Debug)]
pub struct PodUnavailableBudgetSelectorMatchExpressions {
    pub key: String,
    pub operator: String,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub values: Option<Vec<String>>,
}

#[derive(Serialize, Deserialize, Clone, Debug)]
pub struct PodUnavailableBudgetTargetRef {
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "apiVersion")]
    pub api_version: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub kind: Option<String>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
}

#[derive(Serialize, Deserialize, Clone, Debug)]
pub struct PodUnavailableBudgetStatus {
    #[serde(rename = "currentAvailable")]
    pub current_available: i32,
    #[serde(rename = "desiredAvailable")]
    pub desired_available: i32,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "disruptedPods")]
    pub disrupted_pods: Option<BTreeMap<String, String>>,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "observedGeneration")]
    pub observed_generation: Option<i64>,
    #[serde(rename = "totalReplicas")]
    pub total_replicas: i32,
    #[serde(rename = "unavailableAllowed")]
    pub unavailable_allowed: i32,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "unavailablePods")]
    pub unavailable_pods: Option<BTreeMap<String, String>>,
}

